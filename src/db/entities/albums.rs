//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "albums")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub title: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::artists::Entity> for Entity {
    fn to() -> RelationDef {
        super::albums_artists::Relation::Artists.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::albums_artists::Relation::Albums.def().rev())
    }
}

impl Related<super::tracks::Entity> for Entity {
    fn to() -> RelationDef {
        super::albums_tracks::Relation::Tracks.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::albums_tracks::Relation::Albums.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
